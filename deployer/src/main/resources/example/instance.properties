#######################  \u5B8C\u6574\u914D\u7F6E\u53C2\u6570 ##########################
## mysql serverId , v1.0.26+ will autoGen
# \u4E0D\u91CD\u590D\u5373\u53EF\uFF0C\u4E0D\u8981\u548C mysql \u5B9A\u4E49\u7684\u4E00\u6837
canal.instance.mysql.slaveId=12345

# enable gtid use true/false
canal.instance.gtidon=false

# position info \u4E3B\u6570\u636E\u5E93\u5730\u5740
canal.instance.master.address=127.0.0.1:3306
canal.instance.master.journal.name=
canal.instance.master.position=
canal.instance.master.timestamp=
canal.instance.master.gtid=

# rds oss binlog
canal.instance.rds.accesskey=
canal.instance.rds.secretkey=
canal.instance.rds.instanceId=

# table meta tsdb info
canal.instance.tsdb.enable=true
#canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb
#canal.instance.tsdb.dbUsername=canal
#canal.instance.tsdb.dbPassword=canal

#canal.instance.standby.address =
#canal.instance.standby.journal.name =
#canal.instance.standby.position =
#canal.instance.standby.timestamp =
#canal.instance.standby.gtid=

# username/password \u6570\u636E\u5E93\u914D\u7F6E
canal.instance.dbUsername=root
canal.instance.dbPassword=root
canal.instance.connectionCharset = UTF-8
# enable druid Decrypt database password
canal.instance.enableDruid=false
#canal.instance.pwdPublicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALK4BUxdDltRRE5/zXpVEVPUgunvscYFtEip3pmLlhrWpacX7y7GCMo2/JM6LeHmiiNdH1FWgGCpUfircSwlWKUCAwEAAQ==

# table regex \u6570\u636E\u5E93\u8868 binlog \u4E8B\u4EF6\u8FC7\u6EE4
# canal.instance.filter.regex=.*\\..*
#canal.instance.filter.regex=.\*\\\\..\*
# .*\\.user:\u8868\u793A\u6240\u6709\u5E93\u7684 user \u8868
canal.instance.filter.regex=.*\\.user,.*\\.employee
# table black regex
canal.instance.filter.black.regex=mysql\\.slave_.*
# table field filter(format: schema1.tableName1:field1/field2,schema2.tableName2:field1/field2)
#canal.instance.filter.field=test1.t_product:id/subject/keywords,test2.t_company:id/name/contact/ch
# table field black filter(format: schema1.tableName1:field1/field2,schema2.tableName2:field1/field2)
#canal.instance.filter.black.field=test1.t_product:subject/product_image,test2.t_company:id/name/contact/ch

# mq \u914D\u7F6E
# \u914D\u7F6E\u4E86\u52A8\u6001 topic\uFF0C\u8BE5 topic \u65E0\u6548
#canal.mq.topic=example
# dynamic topic route by schema or table regex
# \u9488\u5BF9\u5E93\u540D\u6216\u8868\u540D\u53D1\u9001\u52A8\u6001 topic
#canal.mq.dynamicTopic=mytest1.user,topic2:mytest2\\..*,.*\\..*
# topic \u4E3A\uFF1A\u5E93\u540D_\u8868\u540D\uFF08test \u4E3A\u8868\u540D\uFF09
canal.mq.dynamicTopic=ling\\..*,test\\..*
canal.mq.partitiocd
# hash partition config
#canal.mq.enableDynamicQueuePartition=false
#canal.mq.partitionsNum=3
#canal.mq.dynamicTopicPartitionNum=test.*:4,mycanal:6
# \u5E93\u540D.\u8868\u540D\uFF1A\u552F\u4E00\u4E3B\u952E\uFF0C\u591A\u4E2A\u8868\u4E4B\u95F4\u7528\u9017\u53F7\u5206\u9694
#canal.mq.partitionHash=test.table:id^name,.*\\..*
#
# multi stream for polardbx
canal.instance.multi.stream.on=false
#################################################
